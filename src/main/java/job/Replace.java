package job;

import lombok.Data;
import main.Source;

import java.io.File;
import java.text.NumberFormat;
import java.util.Objects;

/**
 * Convert the data files generated by tpc-ds into data file names that tidb-lightning can recognize
 */
@Data
public class Replace implements Run {

  private String dataFolderPath;

  private String db;

  private int success;
  private int failed;

  public Replace(Source source) {
    db = source.getDb();
    dataFolderPath = source.getFolderPath();
  }

  public void run() {

    File dataFolder = new File(dataFolderPath);

    for (File file : Objects.requireNonNull(dataFolder.listFiles())) {

      if (file.getName().split("\\.").length != 2) {
        System.out.println("unexpected file name: " + file.getAbsolutePath() + ", skip");
        failed++;
        continue;
      }

      String processed = file.getName().split("\\.")[0].replaceAll("_", ".");
      String[] parts = processed.split("\\.");
      String newCSVName = "";

      switch (parts.length) {
        case 3:
          newCSVName = db + "." + parts[0] + "." + numberFormat(parts[1]) + ".csv";
          break;
        case 4:
          newCSVName = db + "." + parts[0] + "_" + parts[1] + "." + numberFormat(parts[2]) + ".csv";
          break;
        default:
          System.out.println("unexpected file name: " + file.getAbsolutePath());
          failed++;
          continue;
      }
      renameFile(file, newCSVName);
      success++;
    }
    System.out.println("replace file name complete, success:" + success + ", failed:" + failed);
  }

  public static String numberFormat(String i) {
    NumberFormat formatter = NumberFormat.getNumberInstance();
    formatter.setMinimumIntegerDigits(8);
    formatter.setGroupingUsed(false);
    return formatter.format(Integer.parseInt(i));
  }

  public static void renameFile(File oldFile, String newFileName) {
    File newFile = new File(oldFile.getParent() + "/" + newFileName);
    if (!oldFile.renameTo(newFile)) {
      System.out.println("rename file failed: " + oldFile.getName() + " -> " + newFile.getName());
    }
  }
}
